# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.changes.outputs.changed }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Check for changes
        id: changes
        run: |
          echo ::set-output name=changed::$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})

  build_api:
    needs: check_changes
    runs-on: ubuntu-latest
    # if: ${{ needs.check_changes.outputs.changed == 'true' && contains(github.event.head_commit.modified, '.py') || contains(github.event.head_commit.modified, 'requirements.txt') }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: pip

      - name: Create and start venv
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install deps
        run: pip install -r requirements.txt

      # Optional: Add step to run tests here (PyTest, Django test suites, etc.)

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: python-app
          path: |
            .
            !venv/

  deploy_api:
    needs: build_api
    runs-on: ubuntu-latest
    environment:
      name: Production
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: python-app
          path: .

      - name: Deploy
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: laimpost3
          slot-name: Production
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_104C845506804B03BD2C008C8E1D19AB }}

  build_and_deploy_app:
    needs: check_changes
    runs-on: ubuntu-latest
    # if: ${{ needs.check_changes.outputs.changed == 'true' && contains(steps.check_changes.outputs.changed, 'laimpost_react/') }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/laimpost_react/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install --prefix laimpost_react

      - name: Build
        run: npm run build --prefix laimpost_react
        env:
          REACT_APP_API_ENDPOINT: ${{ secrets.REACT_APP_API_ENDPOINT }}

      - name: Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: 'laimpost_react/build'
          output_location: ''
          skip_app_build: true